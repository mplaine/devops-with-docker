version: '3.8'

services:
  reverse-proxy:
    image: nginx:1.25.4-alpine
    container_name: nginx
    ports:
      - 80:80
    volumes:
      - ./reserve-proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend

  db:
    image: postgres:13.2-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_DB: postgres
    container_name: postgres
    volumes:
      - ./database:/var/lib/postgresql/data

  cache:
    image: redis:7.2.4
    restart: always
    command: redis-server --save 60 1 --loglevel warning
    container_name: redis

  backend:
    build:
      context: ./example-backend/
      dockerfile: ./Dockerfile
    container_name: backend
    restart: unless-stopped
    ports:
      - 8000:8000
    environment:
      REDIS_HOST: cache
      POSTGRES_HOST: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_DATABASE: postgres
    depends_on:
      - db
      - cache

  frontend:
    build:
      context: ./example-frontend/
      dockerfile: ./Dockerfile
      args:
        REACT_APP_BACKEND_URL: /api
    container_name: frontend
    restart: unless-stopped
    ports:
      - 5000:5000
    depends_on:
      - backend
